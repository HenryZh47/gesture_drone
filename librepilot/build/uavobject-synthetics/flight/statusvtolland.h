/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{
 * @addtogroup StatusVtolLand StatusVtolLand
 * @brief Status of a Vtol landing sequence
 *
 * Autogenerated files and functions for StatusVtolLand Object
 *
 * @{
 *
 * @file       statusvtolland.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010-2013.
 * @brief      Implementation of the StatusVtolLand object. This file has been
 *             automatically generated by the UAVObjectGenerator.
 *
 * @note       Object definition file: statusvtolland.xml.
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef STATUSVTOLLAND_H
#define STATUSVTOLLAND_H
#include <stdbool.h>
/* Object constants */
#define STATUSVTOLLAND_OBJID 0x21475D2E
#define STATUSVTOLLAND_ISSINGLEINST 1
#define STATUSVTOLLAND_ISSETTINGS 0
#define STATUSVTOLLAND_ISPRIORITY 0
#define STATUSVTOLLAND_NUMBYTES sizeof(StatusVtolLandData)

/* Generic interface functions */
int32_t StatusVtolLandInitialize();
UAVObjHandle StatusVtolLandHandle();
void StatusVtolLandSetDefaults(UAVObjHandle obj, uint16_t instId);

/* Field AltitudeAtState information */

// Number of elements for field AltitudeAtState
#define STATUSVTOLLAND_ALTITUDEATSTATE_NUMELEM 10

/* Field targetDescentRate information */

/* Field averageDescentRate information */

/* Field averageDescentThrust information */

/* Field calculatedNeutralThrust information */

/* Field WtgForGroundEffect information */

// Array element names for field WtgForGroundEffect
typedef enum {
    STATUSVTOLLAND_WTGFORGROUNDEFFECT_BOUNCEVELOCITY=0,
    STATUSVTOLLAND_WTGFORGROUNDEFFECT_BOUNCEACCEL=1
} StatusVtolLandWtgForGroundEffectElem;

// Number of elements for field WtgForGroundEffect
#define STATUSVTOLLAND_WTGFORGROUNDEFFECT_NUMELEM 2

/* Field State information */

// Enumeration options for field State
typedef enum __attribute__ ((__packed__)) {
    STATUSVTOLLAND_STATE_INACTIVE=0,
    STATUSVTOLLAND_STATE_INITALTHOLD=1,
    STATUSVTOLLAND_STATE_WTGFORDESCENTRATE=2,
    STATUSVTOLLAND_STATE_ATDESCENTRATE=3,
    STATUSVTOLLAND_STATE_WTGFORGROUNDEFFECT=4,
    STATUSVTOLLAND_STATE_GROUNDEFFECT=5,
    STATUSVTOLLAND_STATE_THRUSTDOWN=6,
    STATUSVTOLLAND_STATE_THRUSTOFF=7,
    STATUSVTOLLAND_STATE_DISARMED=8
} StatusVtolLandStateOptions;

/* Field StateExitReason information */

// Enumeration options for field StateExitReason
typedef enum __attribute__ ((__packed__)) {
    STATUSVTOLLAND_STATEEXITREASON_NONE=0,
    STATUSVTOLLAND_STATEEXITREASON_DESCENTRATEOK=1,
    STATUSVTOLLAND_STATEEXITREASON_ONGROUND=2,
    STATUSVTOLLAND_STATEEXITREASON_BOUNCEVELOCITY=3,
    STATUSVTOLLAND_STATEEXITREASON_BOUNCEACCEL=4,
    STATUSVTOLLAND_STATEEXITREASON_LOWDESCENTRATE=5,
    STATUSVTOLLAND_STATEEXITREASON_ZEROTHRUST=6,
    STATUSVTOLLAND_STATEEXITREASON_POSITIONERROR=7,
    STATUSVTOLLAND_STATEEXITREASON_TIMEOUT=8
} StatusVtolLandStateExitReasonOptions;

// Number of elements for field StateExitReason
#define STATUSVTOLLAND_STATEEXITREASON_NUMELEM 10

/* Field AltitudeState information */

// Enumeration options for field AltitudeState
typedef enum __attribute__ ((__packed__)) {
    STATUSVTOLLAND_ALTITUDESTATE_HIGH=0,
    STATUSVTOLLAND_ALTITUDESTATE_LOW=1
} StatusVtolLandAltitudeStateOptions;



typedef struct __attribute__ ((__packed__)) {
    float BounceVelocity;
    float BounceAccel;
}  StatusVtolLandWtgForGroundEffectData ;
typedef struct __attribute__ ((__packed__)) {
    float array[2];
}  StatusVtolLandWtgForGroundEffectDataArray ;
#define StatusVtolLandWtgForGroundEffectToArray( var ) UAVObjectFieldToArray( StatusVtolLandWtgForGroundEffectData, var )


/*
 * Packed Object data (unaligned).
 * Should only be used where 4 byte alignment can be guaranteed
 * (eg a single instance on the heap)
 */
typedef struct {
        float AltitudeAtState[10];
    float targetDescentRate;
    float averageDescentRate;
    float averageDescentThrust;
    float calculatedNeutralThrust;
    StatusVtolLandWtgForGroundEffectData WtgForGroundEffect;
    StatusVtolLandStateOptions State;
    StatusVtolLandStateExitReasonOptions StateExitReason[10];
    StatusVtolLandAltitudeStateOptions AltitudeState;

} __attribute__((packed)) StatusVtolLandDataPacked;

/*
 * Packed Object data.
 * Alignment is forced to 4 bytes so as to avoid the potential for CPU usage faults
 * on Cortex M4F during load/store of float UAVO fields
 */
typedef StatusVtolLandDataPacked __attribute__((aligned(4))) StatusVtolLandData;

/* Typesafe Object access functions */
static inline int32_t StatusVtolLandGet(StatusVtolLandData * dataOut) {
    return UAVObjGetData(StatusVtolLandHandle(), dataOut);
}
static inline int32_t StatusVtolLandSet(const StatusVtolLandData * dataIn) {
    return UAVObjSetData(StatusVtolLandHandle(), dataIn);
}
static inline int32_t StatusVtolLandInstGet(uint16_t instId, StatusVtolLandData * dataOut) {
    return UAVObjGetInstanceData(StatusVtolLandHandle(), instId, dataOut);
}
static inline int32_t StatusVtolLandInstSet(uint16_t instId, const StatusVtolLandData * dataIn) {
    return UAVObjSetInstanceData(StatusVtolLandHandle(), instId, dataIn);
}
static inline int32_t StatusVtolLandConnectQueue(xQueueHandle queue) {
    return UAVObjConnectQueue(StatusVtolLandHandle(), queue, EV_MASK_ALL_UPDATES);
}
static inline int32_t StatusVtolLandConnectCallback(UAVObjEventCallback cb) {
    return UAVObjConnectCallback(StatusVtolLandHandle(), cb, EV_MASK_ALL_UPDATES, false);
}
static inline int32_t StatusVtolLandConnectFastCallback(UAVObjEventCallback cb) {
    return UAVObjConnectCallback(StatusVtolLandHandle(), cb, EV_MASK_ALL_UPDATES, true);
}
static inline uint16_t StatusVtolLandCreateInstance() {
    return UAVObjCreateInstance(StatusVtolLandHandle(), &StatusVtolLandSetDefaults);
}
static inline void StatusVtolLandRequestUpdate() {
    UAVObjRequestUpdate(StatusVtolLandHandle());
}
static inline void StatusVtolLandRequestInstUpdate(uint16_t instId) {
    UAVObjRequestInstanceUpdate(StatusVtolLandHandle(), instId);
}
static inline void StatusVtolLandUpdated() {
    UAVObjUpdated(StatusVtolLandHandle());
}
static inline void StatusVtolLandInstUpdated(uint16_t instId) {
    UAVObjInstanceUpdated(StatusVtolLandHandle(), instId);
}
static inline void StatusVtolLandLogging() {
    UAVObjLogging(StatusVtolLandHandle());
}
static inline void StatusVtolLandInstLogging(uint16_t instId) {
    UAVObjInstanceLogging(StatusVtolLandHandle(), instId);
}
static inline int32_t StatusVtolLandGetMetadata(UAVObjMetadata * dataOut) {
    return UAVObjGetMetadata(StatusVtolLandHandle(), dataOut);
}
static inline int32_t StatusVtolLandSetMetadata(const UAVObjMetadata * dataIn) {
    return UAVObjSetMetadata(StatusVtolLandHandle(), dataIn);
}
static inline int8_t StatusVtolLandReadOnly() {
    return UAVObjReadOnly(StatusVtolLandHandle());
}

/* Set/Get functions */
extern void StatusVtolLandAltitudeAtStateSet(float *NewAltitudeAtState);
extern void StatusVtolLandAltitudeAtStateGet(float *NewAltitudeAtState);
extern void StatusVtolLandtargetDescentRateSet(float *NewtargetDescentRate);
extern void StatusVtolLandtargetDescentRateGet(float *NewtargetDescentRate);
extern void StatusVtolLandaverageDescentRateSet(float *NewaverageDescentRate);
extern void StatusVtolLandaverageDescentRateGet(float *NewaverageDescentRate);
extern void StatusVtolLandaverageDescentThrustSet(float *NewaverageDescentThrust);
extern void StatusVtolLandaverageDescentThrustGet(float *NewaverageDescentThrust);
extern void StatusVtolLandcalculatedNeutralThrustSet(float *NewcalculatedNeutralThrust);
extern void StatusVtolLandcalculatedNeutralThrustGet(float *NewcalculatedNeutralThrust);
extern void StatusVtolLandWtgForGroundEffectSet(StatusVtolLandWtgForGroundEffectData *NewWtgForGroundEffect);
extern void StatusVtolLandWtgForGroundEffectGet(StatusVtolLandWtgForGroundEffectData *NewWtgForGroundEffect);
extern void StatusVtolLandWtgForGroundEffectArraySet(float *NewWtgForGroundEffect);
extern void StatusVtolLandWtgForGroundEffectArrayGet(float *NewWtgForGroundEffect);
extern void StatusVtolLandStateSet(StatusVtolLandStateOptions *NewState);
extern void StatusVtolLandStateGet(StatusVtolLandStateOptions *NewState);
extern void StatusVtolLandStateExitReasonSet(StatusVtolLandStateExitReasonOptions *NewStateExitReason);
extern void StatusVtolLandStateExitReasonGet(StatusVtolLandStateExitReasonOptions *NewStateExitReason);
extern void StatusVtolLandAltitudeStateSet(StatusVtolLandAltitudeStateOptions *NewAltitudeState);
extern void StatusVtolLandAltitudeStateGet(StatusVtolLandAltitudeStateOptions *NewAltitudeState);


#endif // STATUSVTOLLAND_H

/**
 * @}
 * @}
 */
