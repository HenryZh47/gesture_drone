/**
 ******************************************************************************
 * @addtogroup UAVObjects OpenPilot UAVObjects
 * @{
 * @addtogroup SystemIdentState SystemIdentState
 * @brief Used for logging PID tuning.
 *
 * Autogenerated files and functions for SystemIdentState Object
 *
 * @{
 *
 * @file       systemidentstate.h
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010-2013.
 * @brief      Implementation of the SystemIdentState object. This file has been
 *             automatically generated by the UAVObjectGenerator.
 *
 * @note       Object definition file: systemidentstate.xml.
 *             This is an automatically generated file.
 *             DO NOT modify manually.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

#ifndef SYSTEMIDENTSTATE_H
#define SYSTEMIDENTSTATE_H
#include <stdbool.h>
/* Object constants */
#define SYSTEMIDENTSTATE_OBJID 0x7D742224
#define SYSTEMIDENTSTATE_ISSINGLEINST 1
#define SYSTEMIDENTSTATE_ISSETTINGS 0
#define SYSTEMIDENTSTATE_ISPRIORITY 0
#define SYSTEMIDENTSTATE_NUMBYTES sizeof(SystemIdentStateData)

/* Generic interface functions */
int32_t SystemIdentStateInitialize();
UAVObjHandle SystemIdentStateHandle();
void SystemIdentStateSetDefaults(UAVObjHandle obj, uint16_t instId);

/* Field Tau information */

/* Field Beta information */

// Array element names for field Beta
typedef enum {
    SYSTEMIDENTSTATE_BETA_ROLL=0,
    SYSTEMIDENTSTATE_BETA_PITCH=1,
    SYSTEMIDENTSTATE_BETA_YAW=2
} SystemIdentStateBetaElem;

// Number of elements for field Beta
#define SYSTEMIDENTSTATE_BETA_NUMELEM 3

/* Field Bias information */

// Array element names for field Bias
typedef enum {
    SYSTEMIDENTSTATE_BIAS_ROLL=0,
    SYSTEMIDENTSTATE_BIAS_PITCH=1,
    SYSTEMIDENTSTATE_BIAS_YAW=2
} SystemIdentStateBiasElem;

// Number of elements for field Bias
#define SYSTEMIDENTSTATE_BIAS_NUMELEM 3

/* Field Noise information */

// Array element names for field Noise
typedef enum {
    SYSTEMIDENTSTATE_NOISE_ROLL=0,
    SYSTEMIDENTSTATE_NOISE_PITCH=1,
    SYSTEMIDENTSTATE_NOISE_YAW=2
} SystemIdentStateNoiseElem;

// Number of elements for field Noise
#define SYSTEMIDENTSTATE_NOISE_NUMELEM 3

/* Field Period information */

/* Field NumAfPredicts information */

/* Field NumSpilledPts information */

/* Field HoverThrottle information */

/* Field GyroReadTimeAverage information */

/* Field Complete information */

// Enumeration options for field Complete
typedef enum __attribute__ ((__packed__)) {
    SYSTEMIDENTSTATE_COMPLETE_FALSE=0,
    SYSTEMIDENTSTATE_COMPLETE_TRUE=1
} SystemIdentStateCompleteOptions;



typedef struct __attribute__ ((__packed__)) {
    float Roll;
    float Pitch;
    float Yaw;
}  SystemIdentStateBetaData ;
typedef struct __attribute__ ((__packed__)) {
    float array[3];
}  SystemIdentStateBetaDataArray ;
#define SystemIdentStateBetaToArray( var ) UAVObjectFieldToArray( SystemIdentStateBetaData, var )

typedef struct __attribute__ ((__packed__)) {
    float Roll;
    float Pitch;
    float Yaw;
}  SystemIdentStateBiasData ;
typedef struct __attribute__ ((__packed__)) {
    float array[3];
}  SystemIdentStateBiasDataArray ;
#define SystemIdentStateBiasToArray( var ) UAVObjectFieldToArray( SystemIdentStateBiasData, var )

typedef struct __attribute__ ((__packed__)) {
    float Roll;
    float Pitch;
    float Yaw;
}  SystemIdentStateNoiseData ;
typedef struct __attribute__ ((__packed__)) {
    float array[3];
}  SystemIdentStateNoiseDataArray ;
#define SystemIdentStateNoiseToArray( var ) UAVObjectFieldToArray( SystemIdentStateNoiseData, var )


/*
 * Packed Object data (unaligned).
 * Should only be used where 4 byte alignment can be guaranteed
 * (eg a single instance on the heap)
 */
typedef struct {
        float Tau;
    SystemIdentStateBetaData Beta;
    SystemIdentStateBiasData Bias;
    SystemIdentStateNoiseData Noise;
    float Period;
    uint32_t NumAfPredicts;
    uint32_t NumSpilledPts;
    float HoverThrottle;
    float GyroReadTimeAverage;
    SystemIdentStateCompleteOptions Complete;

} __attribute__((packed)) SystemIdentStateDataPacked;

/*
 * Packed Object data.
 * Alignment is forced to 4 bytes so as to avoid the potential for CPU usage faults
 * on Cortex M4F during load/store of float UAVO fields
 */
typedef SystemIdentStateDataPacked __attribute__((aligned(4))) SystemIdentStateData;

/* Typesafe Object access functions */
static inline int32_t SystemIdentStateGet(SystemIdentStateData * dataOut) {
    return UAVObjGetData(SystemIdentStateHandle(), dataOut);
}
static inline int32_t SystemIdentStateSet(const SystemIdentStateData * dataIn) {
    return UAVObjSetData(SystemIdentStateHandle(), dataIn);
}
static inline int32_t SystemIdentStateInstGet(uint16_t instId, SystemIdentStateData * dataOut) {
    return UAVObjGetInstanceData(SystemIdentStateHandle(), instId, dataOut);
}
static inline int32_t SystemIdentStateInstSet(uint16_t instId, const SystemIdentStateData * dataIn) {
    return UAVObjSetInstanceData(SystemIdentStateHandle(), instId, dataIn);
}
static inline int32_t SystemIdentStateConnectQueue(xQueueHandle queue) {
    return UAVObjConnectQueue(SystemIdentStateHandle(), queue, EV_MASK_ALL_UPDATES);
}
static inline int32_t SystemIdentStateConnectCallback(UAVObjEventCallback cb) {
    return UAVObjConnectCallback(SystemIdentStateHandle(), cb, EV_MASK_ALL_UPDATES, false);
}
static inline int32_t SystemIdentStateConnectFastCallback(UAVObjEventCallback cb) {
    return UAVObjConnectCallback(SystemIdentStateHandle(), cb, EV_MASK_ALL_UPDATES, true);
}
static inline uint16_t SystemIdentStateCreateInstance() {
    return UAVObjCreateInstance(SystemIdentStateHandle(), &SystemIdentStateSetDefaults);
}
static inline void SystemIdentStateRequestUpdate() {
    UAVObjRequestUpdate(SystemIdentStateHandle());
}
static inline void SystemIdentStateRequestInstUpdate(uint16_t instId) {
    UAVObjRequestInstanceUpdate(SystemIdentStateHandle(), instId);
}
static inline void SystemIdentStateUpdated() {
    UAVObjUpdated(SystemIdentStateHandle());
}
static inline void SystemIdentStateInstUpdated(uint16_t instId) {
    UAVObjInstanceUpdated(SystemIdentStateHandle(), instId);
}
static inline void SystemIdentStateLogging() {
    UAVObjLogging(SystemIdentStateHandle());
}
static inline void SystemIdentStateInstLogging(uint16_t instId) {
    UAVObjInstanceLogging(SystemIdentStateHandle(), instId);
}
static inline int32_t SystemIdentStateGetMetadata(UAVObjMetadata * dataOut) {
    return UAVObjGetMetadata(SystemIdentStateHandle(), dataOut);
}
static inline int32_t SystemIdentStateSetMetadata(const UAVObjMetadata * dataIn) {
    return UAVObjSetMetadata(SystemIdentStateHandle(), dataIn);
}
static inline int8_t SystemIdentStateReadOnly() {
    return UAVObjReadOnly(SystemIdentStateHandle());
}

/* Set/Get functions */
extern void SystemIdentStateTauSet(float *NewTau);
extern void SystemIdentStateTauGet(float *NewTau);
extern void SystemIdentStateBetaSet(SystemIdentStateBetaData *NewBeta);
extern void SystemIdentStateBetaGet(SystemIdentStateBetaData *NewBeta);
extern void SystemIdentStateBetaArraySet(float *NewBeta);
extern void SystemIdentStateBetaArrayGet(float *NewBeta);
extern void SystemIdentStateBiasSet(SystemIdentStateBiasData *NewBias);
extern void SystemIdentStateBiasGet(SystemIdentStateBiasData *NewBias);
extern void SystemIdentStateBiasArraySet(float *NewBias);
extern void SystemIdentStateBiasArrayGet(float *NewBias);
extern void SystemIdentStateNoiseSet(SystemIdentStateNoiseData *NewNoise);
extern void SystemIdentStateNoiseGet(SystemIdentStateNoiseData *NewNoise);
extern void SystemIdentStateNoiseArraySet(float *NewNoise);
extern void SystemIdentStateNoiseArrayGet(float *NewNoise);
extern void SystemIdentStatePeriodSet(float *NewPeriod);
extern void SystemIdentStatePeriodGet(float *NewPeriod);
extern void SystemIdentStateNumAfPredictsSet(uint32_t *NewNumAfPredicts);
extern void SystemIdentStateNumAfPredictsGet(uint32_t *NewNumAfPredicts);
extern void SystemIdentStateNumSpilledPtsSet(uint32_t *NewNumSpilledPts);
extern void SystemIdentStateNumSpilledPtsGet(uint32_t *NewNumSpilledPts);
extern void SystemIdentStateHoverThrottleSet(float *NewHoverThrottle);
extern void SystemIdentStateHoverThrottleGet(float *NewHoverThrottle);
extern void SystemIdentStateGyroReadTimeAverageSet(float *NewGyroReadTimeAverage);
extern void SystemIdentStateGyroReadTimeAverageGet(float *NewGyroReadTimeAverage);
extern void SystemIdentStateCompleteSet(SystemIdentStateCompleteOptions *NewComplete);
extern void SystemIdentStateCompleteGet(SystemIdentStateCompleteOptions *NewComplete);


#endif // SYSTEMIDENTSTATE_H

/**
 * @}
 * @}
 */
