/**
 ******************************************************************************
 *
 * @file       ManualControlSettings.java
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Template for an uavobject in java
 *             This is a autogenerated file!! Do not modify and expect a result.
 *             Settings to indicate how to decode receiver input by @ref ManualControlModule.
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

package org.openpilot.uavtalk.uavobjects;

import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.List;
import java.util.ListIterator;

import org.openpilot.uavtalk.UAVObjectManager;
import org.openpilot.uavtalk.UAVObject;
import org.openpilot.uavtalk.UAVDataObject;
import org.openpilot.uavtalk.UAVObjectField;

/**
Settings to indicate how to decode receiver input by @ref ManualControlModule.

generated from manualcontrolsettings.xml
 **/
public class ManualControlSettings extends UAVDataObject {

	public ManualControlSettings() {
		super(OBJID, ISSINGLEINST, ISSETTINGS, NAME);
		
		List<UAVObjectField> fields = new ArrayList<UAVObjectField>();
		

		List<String> FailsafeChannelElemNames = new ArrayList<String>();
		FailsafeChannelElemNames.add("Throttle");
		FailsafeChannelElemNames.add("Roll");
		FailsafeChannelElemNames.add("Pitch");
		FailsafeChannelElemNames.add("Yaw");
		FailsafeChannelElemNames.add("Collective");
		FailsafeChannelElemNames.add("Accessory0");
		FailsafeChannelElemNames.add("Accessory1");
		FailsafeChannelElemNames.add("Accessory2");
		FailsafeChannelElemNames.add("Accessory3");
		fields.add( new UAVObjectField("FailsafeChannel", "%", UAVObjectField.FieldType.FLOAT32, FailsafeChannelElemNames, null) );

		List<String> ChannelMinElemNames = new ArrayList<String>();
		ChannelMinElemNames.add("Throttle");
		ChannelMinElemNames.add("Roll");
		ChannelMinElemNames.add("Pitch");
		ChannelMinElemNames.add("Yaw");
		ChannelMinElemNames.add("FlightMode");
		ChannelMinElemNames.add("Collective");
		ChannelMinElemNames.add("Accessory0");
		ChannelMinElemNames.add("Accessory1");
		ChannelMinElemNames.add("Accessory2");
		ChannelMinElemNames.add("Accessory3");
		ChannelMinElemNames.add("Rssi");
		fields.add( new UAVObjectField("ChannelMin", "us", UAVObjectField.FieldType.INT16, ChannelMinElemNames, null) );

		List<String> ChannelNeutralElemNames = new ArrayList<String>();
		ChannelNeutralElemNames.add("Throttle");
		ChannelNeutralElemNames.add("Roll");
		ChannelNeutralElemNames.add("Pitch");
		ChannelNeutralElemNames.add("Yaw");
		ChannelNeutralElemNames.add("FlightMode");
		ChannelNeutralElemNames.add("Collective");
		ChannelNeutralElemNames.add("Accessory0");
		ChannelNeutralElemNames.add("Accessory1");
		ChannelNeutralElemNames.add("Accessory2");
		ChannelNeutralElemNames.add("Accessory3");
		ChannelNeutralElemNames.add("Rssi");
		fields.add( new UAVObjectField("ChannelNeutral", "us", UAVObjectField.FieldType.INT16, ChannelNeutralElemNames, null) );

		List<String> ChannelMaxElemNames = new ArrayList<String>();
		ChannelMaxElemNames.add("Throttle");
		ChannelMaxElemNames.add("Roll");
		ChannelMaxElemNames.add("Pitch");
		ChannelMaxElemNames.add("Yaw");
		ChannelMaxElemNames.add("FlightMode");
		ChannelMaxElemNames.add("Collective");
		ChannelMaxElemNames.add("Accessory0");
		ChannelMaxElemNames.add("Accessory1");
		ChannelMaxElemNames.add("Accessory2");
		ChannelMaxElemNames.add("Accessory3");
		ChannelMaxElemNames.add("Rssi");
		fields.add( new UAVObjectField("ChannelMax", "us", UAVObjectField.FieldType.INT16, ChannelMaxElemNames, null) );

		List<String> ResponseTimeElemNames = new ArrayList<String>();
		ResponseTimeElemNames.add("Roll");
		ResponseTimeElemNames.add("Pitch");
		ResponseTimeElemNames.add("Yaw");
		ResponseTimeElemNames.add("Collective");
		ResponseTimeElemNames.add("Accessory0");
		ResponseTimeElemNames.add("Accessory1");
		ResponseTimeElemNames.add("Accessory2");
		ResponseTimeElemNames.add("Accessory3");
		ResponseTimeElemNames.add("Rssi");
		fields.add( new UAVObjectField("ResponseTime", "ms", UAVObjectField.FieldType.UINT16, ResponseTimeElemNames, null) );

		List<String> ChannelGroupsElemNames = new ArrayList<String>();
		ChannelGroupsElemNames.add("Throttle");
		ChannelGroupsElemNames.add("Roll");
		ChannelGroupsElemNames.add("Pitch");
		ChannelGroupsElemNames.add("Yaw");
		ChannelGroupsElemNames.add("FlightMode");
		ChannelGroupsElemNames.add("Collective");
		ChannelGroupsElemNames.add("Accessory0");
		ChannelGroupsElemNames.add("Accessory1");
		ChannelGroupsElemNames.add("Accessory2");
		ChannelGroupsElemNames.add("Accessory3");
		ChannelGroupsElemNames.add("Rssi");
		List<String> ChannelGroupsEnumOptions = new ArrayList<String>();
		ChannelGroupsEnumOptions.add("PWM");
		ChannelGroupsEnumOptions.add("PPM");
		ChannelGroupsEnumOptions.add("DSM (MainPort)");
		ChannelGroupsEnumOptions.add("DSM (FlexiPort)");
		ChannelGroupsEnumOptions.add("DSM (RcvrPort)");
		ChannelGroupsEnumOptions.add("S.Bus");
		ChannelGroupsEnumOptions.add("EX.Bus");
		ChannelGroupsEnumOptions.add("HoTT");
		ChannelGroupsEnumOptions.add("SRXL");
		ChannelGroupsEnumOptions.add("IBus");
		ChannelGroupsEnumOptions.add("GCS");
		ChannelGroupsEnumOptions.add("OPLink");
		ChannelGroupsEnumOptions.add("OpenLRS");
		ChannelGroupsEnumOptions.add("None");
		fields.add( new UAVObjectField("ChannelGroups", "Channel Group", UAVObjectField.FieldType.ENUM, ChannelGroupsElemNames, ChannelGroupsEnumOptions) );

		List<String> ChannelNumberElemNames = new ArrayList<String>();
		ChannelNumberElemNames.add("Throttle");
		ChannelNumberElemNames.add("Roll");
		ChannelNumberElemNames.add("Pitch");
		ChannelNumberElemNames.add("Yaw");
		ChannelNumberElemNames.add("FlightMode");
		ChannelNumberElemNames.add("Collective");
		ChannelNumberElemNames.add("Accessory0");
		ChannelNumberElemNames.add("Accessory1");
		ChannelNumberElemNames.add("Accessory2");
		ChannelNumberElemNames.add("Accessory3");
		ChannelNumberElemNames.add("Rssi");
		fields.add( new UAVObjectField("ChannelNumber", "channel", UAVObjectField.FieldType.UINT8, ChannelNumberElemNames, null) );

		List<String> DeadbandElemNames = new ArrayList<String>();
		DeadbandElemNames.add("0");
		fields.add( new UAVObjectField("Deadband", "%", UAVObjectField.FieldType.UINT8, DeadbandElemNames, null) );

		List<String> DeadbandAssistedControlElemNames = new ArrayList<String>();
		DeadbandAssistedControlElemNames.add("0");
		fields.add( new UAVObjectField("DeadbandAssistedControl", "%", UAVObjectField.FieldType.UINT8, DeadbandAssistedControlElemNames, null) );

		List<String> FlightModeNumberElemNames = new ArrayList<String>();
		FlightModeNumberElemNames.add("0");
		fields.add( new UAVObjectField("FlightModeNumber", "", UAVObjectField.FieldType.UINT8, FlightModeNumberElemNames, null) );

		List<String> FailsafeFlightModeSwitchPositionElemNames = new ArrayList<String>();
		FailsafeFlightModeSwitchPositionElemNames.add("0");
		fields.add( new UAVObjectField("FailsafeFlightModeSwitchPosition", "", UAVObjectField.FieldType.INT8, FailsafeFlightModeSwitchPositionElemNames, null) );


		// Compute the number of bytes for this object
		int numBytes = 0;
		ListIterator<UAVObjectField> li = fields.listIterator();
		while(li.hasNext()) {
			numBytes += li.next().getNumBytes();
		}
		NUMBYTES = numBytes;

		// Initialize object
		initializeFields(fields, ByteBuffer.allocate(NUMBYTES), NUMBYTES);
		// Set the default field values
		setDefaultFieldValues();
		// Set the object description
		setDescription(DESCRIPTION);
	}

	/**
	 * Create a Metadata object filled with default values for this object
	 * @return Metadata object with default values
	 */
	public Metadata getDefaultMetadata() {
		UAVObject.Metadata metadata = new UAVObject.Metadata();
    	metadata.flags =
		    UAVObject.Metadata.AccessModeNum(UAVObject.AccessMode.ACCESS_READWRITE) << UAVOBJ_ACCESS_SHIFT |
		    UAVObject.Metadata.AccessModeNum(UAVObject.AccessMode.ACCESS_READWRITE) << UAVOBJ_GCS_ACCESS_SHIFT |
		    1 << UAVOBJ_TELEMETRY_ACKED_SHIFT |
		    1 << UAVOBJ_GCS_TELEMETRY_ACKED_SHIFT |
		    UAVObject.Metadata.UpdateModeNum(UAVObject.UpdateMode.UPDATEMODE_ONCHANGE) << UAVOBJ_TELEMETRY_UPDATE_MODE_SHIFT |
		    UAVObject.Metadata.UpdateModeNum(UAVObject.UpdateMode.UPDATEMODE_ONCHANGE) << UAVOBJ_GCS_TELEMETRY_UPDATE_MODE_SHIFT |
		    UAVObject.Metadata.UpdateModeNum(UAVObject.UpdateMode.UPDATEMODE_MANUAL) << UAVOBJ_LOGGING_UPDATE_MODE_SHIFT;
    	metadata.flightTelemetryUpdatePeriod = 0;
    	metadata.gcsTelemetryUpdatePeriod = 0;
    	metadata.loggingUpdatePeriod = 0;
 
		return metadata;
	}

	/**
	 * Initialize object fields with the default values.
	 * If a default value is not specified the object fields
	 * will be initialized to zero.
	 */
	public void setDefaultFieldValues()
	{
		getField("FailsafeChannel").setValue(-1,0);
		getField("FailsafeChannel").setValue(0,1);
		getField("FailsafeChannel").setValue(0,2);
		getField("FailsafeChannel").setValue(0,3);
		getField("FailsafeChannel").setValue(0,4);
		getField("FailsafeChannel").setValue(0,5);
		getField("FailsafeChannel").setValue(0,6);
		getField("FailsafeChannel").setValue(0,7);
		getField("FailsafeChannel").setValue(0,8);
		getField("ChannelMin").setValue(1000,0);
		getField("ChannelMin").setValue(1000,1);
		getField("ChannelMin").setValue(1000,2);
		getField("ChannelMin").setValue(1000,3);
		getField("ChannelMin").setValue(1000,4);
		getField("ChannelMin").setValue(1000,5);
		getField("ChannelMin").setValue(1000,6);
		getField("ChannelMin").setValue(1000,7);
		getField("ChannelMin").setValue(1000,8);
		getField("ChannelMin").setValue(1000,9);
		getField("ChannelMin").setValue(1000,10);
		getField("ChannelNeutral").setValue(1500,0);
		getField("ChannelNeutral").setValue(1500,1);
		getField("ChannelNeutral").setValue(1500,2);
		getField("ChannelNeutral").setValue(1500,3);
		getField("ChannelNeutral").setValue(1500,4);
		getField("ChannelNeutral").setValue(1500,5);
		getField("ChannelNeutral").setValue(1500,6);
		getField("ChannelNeutral").setValue(1500,7);
		getField("ChannelNeutral").setValue(1500,8);
		getField("ChannelNeutral").setValue(1500,9);
		getField("ChannelNeutral").setValue(1500,10);
		getField("ChannelMax").setValue(2000,0);
		getField("ChannelMax").setValue(2000,1);
		getField("ChannelMax").setValue(2000,2);
		getField("ChannelMax").setValue(2000,3);
		getField("ChannelMax").setValue(2000,4);
		getField("ChannelMax").setValue(2000,5);
		getField("ChannelMax").setValue(2000,6);
		getField("ChannelMax").setValue(2000,7);
		getField("ChannelMax").setValue(2000,8);
		getField("ChannelMax").setValue(2000,9);
		getField("ChannelMax").setValue(2000,10);
		getField("ResponseTime").setValue(0,0);
		getField("ResponseTime").setValue(0,1);
		getField("ResponseTime").setValue(0,2);
		getField("ResponseTime").setValue(0,3);
		getField("ResponseTime").setValue(0,4);
		getField("ResponseTime").setValue(0,5);
		getField("ResponseTime").setValue(0,6);
		getField("ResponseTime").setValue(0,7);
		getField("ResponseTime").setValue(0,8);
		getField("ChannelGroups").setValue("None",0);
		getField("ChannelGroups").setValue("None",1);
		getField("ChannelGroups").setValue("None",2);
		getField("ChannelGroups").setValue("None",3);
		getField("ChannelGroups").setValue("None",4);
		getField("ChannelGroups").setValue("None",5);
		getField("ChannelGroups").setValue("None",6);
		getField("ChannelGroups").setValue("None",7);
		getField("ChannelGroups").setValue("None",8);
		getField("ChannelGroups").setValue("None",9);
		getField("ChannelGroups").setValue("None",10);
		getField("ChannelNumber").setValue(0,0);
		getField("ChannelNumber").setValue(0,1);
		getField("ChannelNumber").setValue(0,2);
		getField("ChannelNumber").setValue(0,3);
		getField("ChannelNumber").setValue(0,4);
		getField("ChannelNumber").setValue(0,5);
		getField("ChannelNumber").setValue(0,6);
		getField("ChannelNumber").setValue(0,7);
		getField("ChannelNumber").setValue(0,8);
		getField("ChannelNumber").setValue(0,9);
		getField("ChannelNumber").setValue(0,10);
		getField("Deadband").setValue(2);
		getField("DeadbandAssistedControl").setValue(8);
		getField("FlightModeNumber").setValue(3);
		getField("FailsafeFlightModeSwitchPosition").setValue(-1);

	}

	/**
	 * Create a clone of this object, a new instance ID must be specified.
	 * Do not use this function directly to create new instances, the
	 * UAVObjectManager should be used instead.
	 */
	public UAVDataObject clone(long instID) {
		// TODO: Need to get specific instance to clone
		try {
			ManualControlSettings obj = new ManualControlSettings();
			obj.initialize(instID, this.getMetaObject());
			return obj;
		} catch  (Exception e) {
			return null;
		}
	}

	/**
	 * Returns a new instance of this UAVDataObject with default field
	 * values. This is intended to be used by 'reset to default' functionality.
	 * 
	 * @return new instance of this class with default values.
	 */
	@Override
	public UAVDataObject getDefaultInstance(){
		return new ManualControlSettings();
	}

	/**
	 * Static function to retrieve an instance of the object.
	 */
	public ManualControlSettings GetInstance(UAVObjectManager objMngr, long instID)
	{
	    return (ManualControlSettings)(objMngr.getObject(ManualControlSettings.OBJID, instID));
	}

	// Constants
	protected static final long OBJID = 0xC2C59876l;
	protected static final String NAME = "ManualControlSettings";
	protected static String DESCRIPTION = "Settings to indicate how to decode receiver input by @ref ManualControlModule.";
	protected static final boolean ISSINGLEINST = 1 > 0;
	protected static final boolean ISSETTINGS = 1 > 0;
	protected static int NUMBYTES = 0;


}
