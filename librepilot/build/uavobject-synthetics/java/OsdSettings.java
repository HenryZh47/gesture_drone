/**
 ******************************************************************************
 *
 * @file       OsdSettings.java
 * @author     The OpenPilot Team, http://www.openpilot.org Copyright (C) 2010.
 * @brief      Template for an uavobject in java
 *             This is a autogenerated file!! Do not modify and expect a result.
 *             OSD settings used by the OSDgen module
 *
 * @see        The GNU Public License (GPL) Version 3
 *
 *****************************************************************************/
/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
 * for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program; if not, write to the Free Software Foundation, Inc.,
 * 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

package org.openpilot.uavtalk.uavobjects;

import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.List;
import java.util.ListIterator;

import org.openpilot.uavtalk.UAVObjectManager;
import org.openpilot.uavtalk.UAVObject;
import org.openpilot.uavtalk.UAVDataObject;
import org.openpilot.uavtalk.UAVObjectField;

/**
OSD settings used by the OSDgen module

generated from osdsettings.xml
 **/
public class OsdSettings extends UAVDataObject {

	public OsdSettings() {
		super(OBJID, ISSINGLEINST, ISSETTINGS, NAME);
		
		List<UAVObjectField> fields = new ArrayList<UAVObjectField>();
		

		List<String> AttitudeSetupElemNames = new ArrayList<String>();
		AttitudeSetupElemNames.add("X");
		AttitudeSetupElemNames.add("Y");
		fields.add( new UAVObjectField("AttitudeSetup", "", UAVObjectField.FieldType.INT16, AttitudeSetupElemNames, null) );

		List<String> TimeSetupElemNames = new ArrayList<String>();
		TimeSetupElemNames.add("X");
		TimeSetupElemNames.add("Y");
		fields.add( new UAVObjectField("TimeSetup", "", UAVObjectField.FieldType.INT16, TimeSetupElemNames, null) );

		List<String> BatterySetupElemNames = new ArrayList<String>();
		BatterySetupElemNames.add("X");
		BatterySetupElemNames.add("Y");
		fields.add( new UAVObjectField("BatterySetup", "", UAVObjectField.FieldType.INT16, BatterySetupElemNames, null) );

		List<String> SpeedSetupElemNames = new ArrayList<String>();
		SpeedSetupElemNames.add("X");
		SpeedSetupElemNames.add("Y");
		fields.add( new UAVObjectField("SpeedSetup", "", UAVObjectField.FieldType.INT16, SpeedSetupElemNames, null) );

		List<String> AltitudeSetupElemNames = new ArrayList<String>();
		AltitudeSetupElemNames.add("X");
		AltitudeSetupElemNames.add("Y");
		fields.add( new UAVObjectField("AltitudeSetup", "", UAVObjectField.FieldType.INT16, AltitudeSetupElemNames, null) );

		List<String> HeadingSetupElemNames = new ArrayList<String>();
		HeadingSetupElemNames.add("X");
		HeadingSetupElemNames.add("Y");
		fields.add( new UAVObjectField("HeadingSetup", "", UAVObjectField.FieldType.INT16, HeadingSetupElemNames, null) );

		List<String> AttitudeElemNames = new ArrayList<String>();
		AttitudeElemNames.add("0");
		List<String> AttitudeEnumOptions = new ArrayList<String>();
		AttitudeEnumOptions.add("Disabled");
		AttitudeEnumOptions.add("Enabled");
		fields.add( new UAVObjectField("Attitude", "", UAVObjectField.FieldType.ENUM, AttitudeElemNames, AttitudeEnumOptions) );

		List<String> TimeElemNames = new ArrayList<String>();
		TimeElemNames.add("0");
		List<String> TimeEnumOptions = new ArrayList<String>();
		TimeEnumOptions.add("Disabled");
		TimeEnumOptions.add("Enabled");
		fields.add( new UAVObjectField("Time", "", UAVObjectField.FieldType.ENUM, TimeElemNames, TimeEnumOptions) );

		List<String> BatteryElemNames = new ArrayList<String>();
		BatteryElemNames.add("0");
		List<String> BatteryEnumOptions = new ArrayList<String>();
		BatteryEnumOptions.add("Disabled");
		BatteryEnumOptions.add("Enabled");
		fields.add( new UAVObjectField("Battery", "", UAVObjectField.FieldType.ENUM, BatteryElemNames, BatteryEnumOptions) );

		List<String> SpeedElemNames = new ArrayList<String>();
		SpeedElemNames.add("0");
		List<String> SpeedEnumOptions = new ArrayList<String>();
		SpeedEnumOptions.add("Disabled");
		SpeedEnumOptions.add("Enabled");
		fields.add( new UAVObjectField("Speed", "", UAVObjectField.FieldType.ENUM, SpeedElemNames, SpeedEnumOptions) );

		List<String> AltitudeElemNames = new ArrayList<String>();
		AltitudeElemNames.add("0");
		List<String> AltitudeEnumOptions = new ArrayList<String>();
		AltitudeEnumOptions.add("Disabled");
		AltitudeEnumOptions.add("Enabled");
		fields.add( new UAVObjectField("Altitude", "", UAVObjectField.FieldType.ENUM, AltitudeElemNames, AltitudeEnumOptions) );

		List<String> HeadingElemNames = new ArrayList<String>();
		HeadingElemNames.add("0");
		List<String> HeadingEnumOptions = new ArrayList<String>();
		HeadingEnumOptions.add("Disabled");
		HeadingEnumOptions.add("Enabled");
		fields.add( new UAVObjectField("Heading", "", UAVObjectField.FieldType.ENUM, HeadingElemNames, HeadingEnumOptions) );

		List<String> ScreenElemNames = new ArrayList<String>();
		ScreenElemNames.add("0");
		fields.add( new UAVObjectField("Screen", "", UAVObjectField.FieldType.UINT8, ScreenElemNames, null) );

		List<String> WhiteElemNames = new ArrayList<String>();
		WhiteElemNames.add("0");
		fields.add( new UAVObjectField("White", "", UAVObjectField.FieldType.UINT8, WhiteElemNames, null) );

		List<String> BlackElemNames = new ArrayList<String>();
		BlackElemNames.add("0");
		fields.add( new UAVObjectField("Black", "", UAVObjectField.FieldType.UINT8, BlackElemNames, null) );

		List<String> AltitudeSourceElemNames = new ArrayList<String>();
		AltitudeSourceElemNames.add("0");
		List<String> AltitudeSourceEnumOptions = new ArrayList<String>();
		AltitudeSourceEnumOptions.add("GPS");
		AltitudeSourceEnumOptions.add("Baro");
		fields.add( new UAVObjectField("AltitudeSource", "", UAVObjectField.FieldType.ENUM, AltitudeSourceElemNames, AltitudeSourceEnumOptions) );


		// Compute the number of bytes for this object
		int numBytes = 0;
		ListIterator<UAVObjectField> li = fields.listIterator();
		while(li.hasNext()) {
			numBytes += li.next().getNumBytes();
		}
		NUMBYTES = numBytes;

		// Initialize object
		initializeFields(fields, ByteBuffer.allocate(NUMBYTES), NUMBYTES);
		// Set the default field values
		setDefaultFieldValues();
		// Set the object description
		setDescription(DESCRIPTION);
	}

	/**
	 * Create a Metadata object filled with default values for this object
	 * @return Metadata object with default values
	 */
	public Metadata getDefaultMetadata() {
		UAVObject.Metadata metadata = new UAVObject.Metadata();
    	metadata.flags =
		    UAVObject.Metadata.AccessModeNum(UAVObject.AccessMode.ACCESS_READWRITE) << UAVOBJ_ACCESS_SHIFT |
		    UAVObject.Metadata.AccessModeNum(UAVObject.AccessMode.ACCESS_READWRITE) << UAVOBJ_GCS_ACCESS_SHIFT |
		    1 << UAVOBJ_TELEMETRY_ACKED_SHIFT |
		    1 << UAVOBJ_GCS_TELEMETRY_ACKED_SHIFT |
		    UAVObject.Metadata.UpdateModeNum(UAVObject.UpdateMode.UPDATEMODE_ONCHANGE) << UAVOBJ_TELEMETRY_UPDATE_MODE_SHIFT |
		    UAVObject.Metadata.UpdateModeNum(UAVObject.UpdateMode.UPDATEMODE_ONCHANGE) << UAVOBJ_GCS_TELEMETRY_UPDATE_MODE_SHIFT |
		    UAVObject.Metadata.UpdateModeNum(UAVObject.UpdateMode.UPDATEMODE_MANUAL) << UAVOBJ_LOGGING_UPDATE_MODE_SHIFT;
    	metadata.flightTelemetryUpdatePeriod = 0;
    	metadata.gcsTelemetryUpdatePeriod = 0;
    	metadata.loggingUpdatePeriod = 0;
 
		return metadata;
	}

	/**
	 * Initialize object fields with the default values.
	 * If a default value is not specified the object fields
	 * will be initialized to zero.
	 */
	public void setDefaultFieldValues()
	{
		getField("AttitudeSetup").setValue(168,0);
		getField("AttitudeSetup").setValue(135,1);
		getField("TimeSetup").setValue(10,0);
		getField("TimeSetup").setValue(250,1);
		getField("BatterySetup").setValue(316,0);
		getField("BatterySetup").setValue(210,1);
		getField("SpeedSetup").setValue(2,0);
		getField("SpeedSetup").setValue(145,1);
		getField("AltitudeSetup").setValue(2,0);
		getField("AltitudeSetup").setValue(145,1);
		getField("HeadingSetup").setValue(168,0);
		getField("HeadingSetup").setValue(240,1);
		getField("Attitude").setValue("Enabled");
		getField("Time").setValue("Enabled");
		getField("Battery").setValue("Enabled");
		getField("Speed").setValue("Enabled");
		getField("Altitude").setValue("Enabled");
		getField("Heading").setValue("Enabled");
		getField("Screen").setValue(0);
		getField("White").setValue(4);
		getField("Black").setValue(1);
		getField("AltitudeSource").setValue("GPS");

	}

	/**
	 * Create a clone of this object, a new instance ID must be specified.
	 * Do not use this function directly to create new instances, the
	 * UAVObjectManager should be used instead.
	 */
	public UAVDataObject clone(long instID) {
		// TODO: Need to get specific instance to clone
		try {
			OsdSettings obj = new OsdSettings();
			obj.initialize(instID, this.getMetaObject());
			return obj;
		} catch  (Exception e) {
			return null;
		}
	}

	/**
	 * Returns a new instance of this UAVDataObject with default field
	 * values. This is intended to be used by 'reset to default' functionality.
	 * 
	 * @return new instance of this class with default values.
	 */
	@Override
	public UAVDataObject getDefaultInstance(){
		return new OsdSettings();
	}

	/**
	 * Static function to retrieve an instance of the object.
	 */
	public OsdSettings GetInstance(UAVObjectManager objMngr, long instID)
	{
	    return (OsdSettings)(objMngr.getObject(OsdSettings.OBJID, instID));
	}

	// Constants
	protected static final long OBJID = 0xDCBBA81Al;
	protected static final String NAME = "OsdSettings";
	protected static String DESCRIPTION = "OSD settings used by the OSDgen module";
	protected static final boolean ISSINGLEINST = 1 > 0;
	protected static final boolean ISSETTINGS = 1 > 0;
	protected static int NUMBYTES = 0;


}
